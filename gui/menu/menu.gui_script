local render_helper=require ("render.render_helper")
local gui_helper=require ("modules.gui")

function init(self)
    msg.post(".","acquire_input_focus")
    local file_path = sys.get_save_file("game","settings")
    local settings = sys.load(file_path)
    if(not next(settings)) then
    	self.play_music=true
    	self.play_sound=true
    else
    	self.play_music=settings.play_music
    	self.play_sound=settings.play_sound
    end
    
   	if(self.play_music)then
   		sound.set_group_gain(hash("master"),1)
   	else
   		sound.set_group_gain(hash("master"),0)
   	end
   	
    if(self.play_sound)then
   		sound.set_group_gain(hash("effect"),1)
   	else
   		sound.set_group_gain(hash("effect"),0)
   	end
   	
   	--
   	self.musicCheckBox=gui_helper.getCheckBox(self.play_music,"musicOn","musicOff",gui.get_node("music"))
   	self.soundCheckBox=gui_helper.getCheckBox(self.play_sound,"audioOn","audioOff",gui.get_node("sound"))	  		  	
   			
    
end

function final(self)
	print("final")
	local file_path = sys.get_save_file("game","settings")
	if(not sys.save(file_path,{play_music=self.play_music,play_sound=self.play_sound})) then
		print("error to save file")
	end
end

function update(self, dt)
    -- Add update code here
    -- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
    -- Add message-handling code here
    -- Remove this function if not needed
end

function on_input(self, action_id, action)
	local boolean clicked = (action_id == hash("click") or action_id == hash("touch")) and action.pressed
   	if(clicked) then
   		world_position=render_helper.action_to_position(action)
   		print("world:" .. world_position.x .. " " .. world_position.y)
   		if(gui.pick_node(gui.get_node("button_play/button"), action.x, action.y)) then
   			print("play clicked")
   			msg.post("main:/loader","show_game")
   		elseif(gui.pick_node(gui.get_node("button_shop/button"), action.x, action.y)) then
   			print("shop clicked")
   			msg.post("main:/loader","show_shop")
   		elseif(gui.pick_node(gui.get_node("button_highscores/button"), action.x, action.y)) then
   			print("highscores clicked")
   			msg.post("main:/loader","show_highscores")
   		elseif(gui.pick_node(gui.get_node("music"), action.x, action.y)) then
   			print("music clicked")
   			self.play_music=not self.play_music
   			if(self.play_music)then
   				sound.set_group_gain(hash("master"),1)
   			else
   				sound.set_group_gain(hash("master"),0)
   			end
   			self.musicCheckBox.setChecked(self.play_music)
   		elseif(gui.pick_node(gui.get_node("sound"), action.x, action.y)) then
   			print("sound clicked")
   			self.play_sound=not self.play_sound
   			if(self.play_sound)then
   				sound.set_group_gain(hash("effect"),1)
   			else
   				sound.set_group_gain(hash("effect"),0)
   			end
   			self.soundCheckBox.setChecked(self.play_sound)
   		end
   	end
end

function on_reload(self)
    -- Add input-handling code here
    -- Remove this function if not needed
end
