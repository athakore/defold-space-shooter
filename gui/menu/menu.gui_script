local render_helper=require ("render.render_helper")
local gui_helper=require ("modules.gui")
local settings ={}   	
	
function init(self)
    msg.post(".","acquire_input_focus")
    local file_path = sys.get_save_file("game","settings")
    settings = sys.load(file_path)
    --if table empty
    if(not next(settings)) then 
    	settings.play_music=true
    	settings.play_sound=true
    end
    
   	self.musicCheckBox=gui_helper.getCheckBox(settings.play_music,"musicOn","musicOff",gui.get_node("music"))
   	self.musicCheckBox.callback = 
   		function(value)
   			settings.play_music = value
   			if(value)then
   			sound.set_group_gain(hash("master"),1)
   			else
   			sound.set_group_gain(hash("master"),0)
   			end
   		end
   	self.musicCheckBox.setChecked(settings.play_music)	
   			
   	self.soundCheckBox=gui_helper.getCheckBox(settings.play_sound,"audioOn","audioOff",gui.get_node("sound"))
   	self.soundCheckBox.callback = 
   		function(value)
   			settings.play_sound = value
   			if(value)then
   			sound.set_group_gain(hash("effect"),1)
   			else
   			sound.set_group_gain(hash("effect"),0)
   			end
   		end
   	self.soundCheckBox.setChecked(settings.play_sound)
   	self.button_play=gui_helper.get_button("button_up","button_down",gui.get_node("button_play/button"))	  		  	
	print(self.button_play)
end

function final(self)
	local file_path = sys.get_save_file("game","settings")
	print(settings.play_music)
	if(not sys.save(file_path,settings)) then
		print("error to save file")
	end
end

function on_input(self, action_id, action)
	local boolean clicked = (action_id == hash("click") or action_id == hash("touch"))
	--if(clicked) then
		if(self.button_play.clicked(action))then
   			msg.post("main:/loader","show_game")
   		elseif(self.musicCheckBox.clicked(action)) then
   			print("music clicked")
   		elseif(self.soundCheckBox.clicked(action)) then
   			print("sound clicked")	
   		--end
	end
   
end

function on_reload(self)
    -- Add input-handling code here
    -- Remove this function if not needed
end
